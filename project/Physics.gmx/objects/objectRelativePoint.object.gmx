<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objectPoint</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///construct
event_inherited();
anchor = 0;
forces = ds_list_create();
relativePosition = instance_create(x, y, objectVector);
defaultPosition = instance_create(x, y, objectVector);
initialPosition = instance_create(x, y, objectVector);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///relative move
//prve pozriet vsetky sily
setVectorValue(acceleration, 0);
var tmpF;
for (var i = 0; i &lt; ds_list_size(forces); i++){
    if (instance_exists(forces[| i])){
        tmpF = forces[| i];
        if (tmpF.apply &gt; 0){
             addVector(acceleration, tmpF.force);
             setVectorValue(tmpF.force, tmpF.force.value - anchor.attract);
             if (tmpF.apply == 1){
                ds_list_delete(forces, i);
             }
             tmpF.apply--;
        }
    }
}
addVector(velocity, acceleration);
//najskor pozret ci mam zrychlenie
if (acceleration.value &lt;= 0){
   if (velocity.value &gt; 0){
      setVectorValue(velocity, velocity.value - anchor.frictionMove);
   }
   //ak som mimo pozicie tak sa vratit spat
   if (compareVector(relativePosition, defaultPosition) == false){
      anchorAttract(anchor, relativePosition, defaultPosition);
   }
   else{
        relativePosition.value = defaultPosition.value;
        relativePosition.normX = defaultPosition.normX;
        relativePosition.normY = defaultPosition.normY;
   }
}
//set relative position x, y
addVector(relativePosition, velocity);
var relativeAngle = getAngleToX(anchor.rotation) - 90 + getAngleToX(relativePosition);
x = anchor.x + cos(degtorad(relativeAngle)) * relativePosition.value;
y = anchor.y + sin(degtorad(relativeAngle)) * relativePosition.value * -1;
image_angle = anchor.image_angle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
